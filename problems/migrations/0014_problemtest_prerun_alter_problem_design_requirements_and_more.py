# Generated by Django 4.1.7 on 2023-11-26 22:18

from django.db import migrations, models
import problems.widgets


class Migration(migrations.Migration):

    dependencies = [
        ('problems', '0013_alter_legallanguage_options'),
    ]

    operations = [
        migrations.AddField(
            model_name='problemtest',
            name='prerun',
            field=models.BooleanField(choices=[(True, 'Before code is run'), (False, 'After code is run')], default=False, help_text="Tests that operate before the learner's code is run are run first, in order of priority.", verbose_name='runtime'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='problem',
            name='design_requirements',
            field=problems.widgets.CodeField(languages=['markdown'], tab_name='design_requirements.md'),
        ),
        migrations.AlterField(
            model_name='problemtest',
            name='code',
            field=problems.widgets.CodeField(givens='\nclass TestFailure:\n    def __init__(self, which, description, context):\n        self.which = which # Which design requirement the learner failed to meet\n        self.description = description # How the learner failed to meet it\n        self.context = context # Some data or other information to provide context\n    def to_dict(self):\n        return {\n            "which": self.which,\n            "desc": self.desc,\n            "context": self.context\n        }\n\nclass Result:\n    def __init__(self):\n        self._errors = []\n        self._decorations = []\n        self._markdownDisplay = ""\n    def add_error(self, test_failure):\n        self._errors.append(test_failure)\n    def add_decoration(self, file, selection, effect):\n        self._decorations.append((file, selection, effect))\n    def set_display(self, display):\n        self._markdownDisplay = display\n    def to_dict(self):\n        return {\n            "errors": list(map(TestFailure.to_dict, self._errors)),\n            "decorations": self._decorations,\n            "markdownDisplay": self._markdownDisplay\n        }\n\n# GIVENS:\n#         main : \n#         code : \n#     language : \n#       active : (Optional)\n#    selection : (Optional)\n#  POST-RUN TESTS ONLY:\n#       module : The python module created by running the user\'s code\n#       output : The print output created by running the user\'s code\n\n# Most normal values and attributes starting with an underscore ("_") are off-limits, except for:\n#  ("__dict__", "__name__", "__import__")\n\nresult = Result()\n    ', languages=['python'], tab_name='__test__.py'),
        ),
        migrations.AlterField(
            model_name='problemtest',
            name='priority',
            field=models.IntegerField(help_text='Higher values run first. Syntax errors occur before run at priority 2000000000. Values must be between -2147483648 to 2147483647.'),
        ),
    ]
